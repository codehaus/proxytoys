<project name="proxytoys" default="test">
    <property name="version" value="1.0-SNAPSHOT" />

    <property name="project" value="${ant.project.name}" />
    <property name="src.dir" location="src" />
    <property name="test.dir" location="test" />
    <property name="lib.dir" location="lib" />
    <property name="website.src.dir" location="website/src" />
    <property name="website.lib.dir" location="website/lib" />

    <property name="build.dir" location="build" />
    <property name="classes.dir" location="${build.dir}/classes" />
    <property name="test.classes.dir" location="${build.dir}/test-classes" />
    <property name="test.reports.dir" location="${build.dir}/test-reports" />
    <property name="website.classes.dir" location="${build.dir}/website-classes" />
    <property name="dist.dir" location="${build.dir}/dist" />
    <property name="srcdist.dir" location="${build.dir}/srcdist" />
    <property name="jar.file" location="${build.dir}/${project}-${version}.jar" />
    <property name="dist.file" location="${build.dir}/${project}-${version}.zip" />
    <property name="src.file" location="${build.dir}/${project}-src-${version}.zip" />
    <property name="license.file" location="${build.dir}/${project}-${version}.txt" />
    <property name="website.dir" location="${build.dir}/website" />
    <property name="javadoc.dir" location="${website.dir}/apidocs" />
    <property name="junit.haltonfailure" value="true"/>

    <property name="publish.path" value="/home/projects/proxytoys/docs/${version}" />

    <target name="-init">
        <mkdir dir="${build.dir}" />
    </target>

    <target name="compile" depends="-init">
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="yes" source="1.3" target="1.3">
            <classpath>
                <fileset dir="${lib.dir}">
                    <include name="cglib*.jar" />
                 </fileset>
            </classpath>
        </javac>
    </target>

    <target name="supporting-java">
        <mkdir dir="${website.classes.dir}" />
        <javac srcdir="website/src/java" destdir="${website.classes.dir}">
            <classpath>
                <fileset dir="${website.lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${lib.dir}" includes="*.jar" />
            </classpath>
        </javac>
    </target>

    <target name="jar" depends="compile">
        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java" />
                <exclude name="**/*.html" />
            </fileset>
        </copy>
        <mkdir dir="${classes.dir}/META-INF" />
        <copy file="LICENSE.txt" todir="${classes.dir}/META-INF"/>
        <jar basedir="${classes.dir}" destfile="${jar.file}" />
    </target>

    <target name="jar-dist" depends="jar">
        <copy file="${jar.file}" todir="/home/projects/proxytoys/dist/jars" />
    </target>

    <target name="dist" depends="srcdist, jar-dist">
        <copy file="${dist.file}" todir="/home/projects/proxytoys/dist/distributions" />
        <copy file="${src.file}" todir="/home/projects/proxytoys/dist/distributions" />
        <copy file="${license.file}" todir="/home/projects/proxytoys/dist/licenses" />
    </target>

    <target name="jar-dist-plink" depends="jar">
        <exec dir="." executable="pscp">
            <arg value="${jar.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/jars" />
        </exec>
    </target>

    <target name="dist-plink" depends="srcdist, jar-dist-plink">
        <exec dir="." executable="pscp">
            <arg value="${dist.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/distributions" />
        </exec>
        <exec dir="." executable="pscp">
            <arg value="${src.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/distributions" />
        </exec>
        <exec dir="." executable="pscp">
            <arg value="${license.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/licenses" />
        </exec>
    </target>

    <target name="jar-dist-scp" depends="jar">
        <exec dir="." executable="scp">
            <arg value="${jar.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/jars" />
        </exec>
    </target>

    <target name="dist-scp" depends="srcdist, jar-dist-scp">
        <exec dir="." executable="scp">
            <arg value="${dist.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/distributions" />
        </exec>
        <exec dir="." executable="scp">
            <arg value="${src.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/distributions" />
        </exec>
        <exec dir="." executable="scp">
            <arg value="${license.file}" />
            <arg value="${username}@beaver.codehaus.org:/home/projects/proxytoys/dist/licenses" />
        </exec>
    </target>

    <target name="publish" depends="website" description="Publish website">
        <copy todir="${publish.path}">
            <fileset dir="${website.dir}" />
        </copy>
    </target>

    <target name="javadoc">
        <mkdir dir="${javadoc.dir}" />
        <javadoc destdir="${javadoc.dir}" windowtitle="ProxyToys API Documentation" header="&lt;IMG class='logo' src='{@docroot}/../logo.gif' /&gt;" stylesheetfile="${website.src.dir}/templates/javadoc.css" use="true" useexternalfile="true">

            <packageset dir="src" />

            <sourcepath>
                <path path="src" />
            </sourcepath>

            <classpath>
                <fileset dir="lib" />
            </classpath>

            <link href="http://java.sun.com/j2se/1.4.2/docs/api" />
            <link href="http://www.junit.org/junit/javadoc/3.8.1" />
            <link href="http://cglib.sourceforge.net/apidocs" />
        </javadoc>
    </target>

    <target name="test.compile" depends="jar">
        <mkdir dir="${test.classes.dir}" />
        <javac fork="true" srcdir="${test.dir}" destdir="${test.classes.dir}" debug="yes" source="1.3" target="1.3">
            <classpath>
                <fileset dir="${lib.dir}" includes="*.jar" />
                <pathelement location="${jar.file}" />
            </classpath>
        </javac>
    </target>

    <target name="test" depends="test.compile">
        <mkdir dir="${test.reports.dir}" />
        <junit fork="yes" forkmode="once" showoutput="yes" printsummary="yes" haltonfailure="${junit.haltonfailure}">
            <sysproperty key="java.awt.headless" value="true"/>
            <formatter type="plain" />
            <formatter type="xml"/>
            <classpath>
                <path location="${test.classes.dir}" />
                <fileset dir="${lib.dir}" includes="*.jar" />
                <path location="${jar.file}" />
            </classpath>
            <test name="com.thoughtworks.proxy.AllTests" todir="${test.reports.dir}" />
        </junit>
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="noframes" todir="${test.reports.dir}" styledir="${website.src.dir}/templates"/>
        </junitreport>
     </target>

    <target name="website" depends="supporting-java, javadoc, test" description="Build website">
        <copy file="${test.reports.dir}/junit-noframes.html" todir="${website.src.dir}/content" />
        <java classname="minimesh.Main" failonerror="true">
            <classpath>
                <fileset dir="${website.lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${lib.dir}" includes="*.jar" />
                <pathelement path="${website.classes.dir}" />
            </classpath>
            <arg value="${website.src.dir}/content/website.xml" />
            <arg value="${website.src.dir}/templates/skin.html" />
            <arg value="${website.dir}" />
        </java>
        <delete file="${website.src.dir}/content/junit-noframes.html" />
    </target>

    <target name="distribution" depends="jar,website">
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}/docs"/>

        <copy todir="${dist.dir}">
            <fileset dir=".">
                <include name="lib/cglib*.jar"/>
                <include name="LICENSE.txt"/>
            </fileset>
        </copy>
        <copy todir="${dist.dir}/docs">
            <fileset dir="${website.dir}" />
        </copy>
        <copy file="${jar.file}" todir="${dist.dir}"/>

        <zip destfile="${dist.file}" basedir="${dist.dir}" />
        <copy file="LICENSE.txt" tofile="${license.file}" />
    </target>

    <target name="srcdist" depends="distribution">
        <mkdir dir="${srcdist.dir}"/>

        <copy todir="${srcdist.dir}">
            <fileset dir=".">
                <include name="src/**"/>
                <include name="test/**"/>
                <include name="lib/*.jar"/>
                <exclude name="lib/cglib*.jar"/>
                <include name="build.xml"/>
                <include name="LICENSE.txt"/>
            </fileset>
        </copy>

        <zip destfile="${src.file}" basedir="${srcdist.dir}" />
    </target>

    <target name="clean">
        <delete dir="${build.dir}" />
    </target>

    <target name="clobber" depends="clean">
        <delete dir="${dist.dir}" />
    </target>

    <target name="rebuild" depends="clobber, jar, website" />
    
    <target name="continuous-integration" depends="clean, test" />
</project>
